---
title: Steeltoe
---

<section class="bg-ms-blue hero">
  <div id="particles"></div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py4">
      <div class="clearfix">
        <div class="col sm-col-10 md-col-9">
          <h1 class="h2 sm-h1 white mt0 mb1 text-shadow regular">Cloud-native .NET microservices</h1>
          <h2 class="h3 white mt0 mb2 sm-mb1 text-shadow regular">Steeltoe is an open source project that enables .NET developers to implement industry standard best practices when building resilient microservices for the cloud. The Steeltoe client libraries enable .NET Core and .NET Framework apps to easily leverage Netflix Eureka, Hystrix, Spring Cloud Config Server, and Cloud Foundry services.</h2>
        </div>
      </div>
      <div class="clearfix sm-mt2">
        <div class="col col-12">
          <a target="_blank" href="https://github.com/SteeltoeOSS/Samples/blob/master/README.md" class="btn btn-cta center sm-left block sm-inline-block bg-white ms-blue sm-mr1 not-rounded regular">
            <i class="fa fa-github mr1"></i>
            View Sample Apps on GitHub
          </a>
          <a target="_blank" href="https://slack.steeltoe.io/" class="btn btn-cta btn-outline center sm-left block sm-inline-block border-white white mt1 sm-mt0 not-rounded regular">
            <i class="fa fa-slack mr1"></i>
            Join us on Slack
          </a>
        </div>
      </div>
    </div>
  </div>
</section>


<main class="mt2">
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col col-12 sm-col-6">
          <h2 class="regular my0 steel-body muted">01</h2>
          <h1 class="mt0 mb1 steel-heading">Service Discovery</h1>
          <p class="mt0 steel-body">
            How do you keep track of the services you depend on, as they dynamically scale out and in, changing addresses along the way? A service registry is essentially a database of healthy service instances that enables service consumers to locate and load balance requests across services. Steeltoe includes a .NET client for Netflix Eureka so your microservices can register themselves and discover other registered services.
          </p>
          <a href="/docs/steeltoe-discovery/" class="btn btn-cta center sm-left block sm-inline-block border-white bg-blue white sm-mr1 not-rounded regular">
            Learn More
          </a>
        </div>
        <div class="col col-12 sm-col-6 sm-pl4">
          <img class="svg-illustration" id="service-discovery" src="images/service-discovery.svg" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py2 sm-py4">
        <section class="clearfix py1 sm-py4">
          <div class="col col-12 sm-col-6 sm-col-right sm-pl2">
            <h2 class="regular my0 steel-body muted">02</h2>
            <h1 class="mt0 mb1 steel-heading">Config Server</h1>
            <p class="mt0 steel-body">
              Separating configuration from application code is an important discipline in cloud-native development. Spring Cloud Config Server provides a mechanism to store your applicationâ€™s configuration externally, and have it injected into your application at runtime. Steeltoe includes a custom .NET Configuration Provider that utilizes Spring Cloud Config Server to pull in config values stored in Git, the filesystem, or Hashicorp Vault. 
            </p>
            <a href="/docs/steeltoe-configuration/#2-0-config-server-provider/" class="btn btn-cta center sm-left block sm-inline-block border-white bg-blue white sm-mr1 not-rounded regular">
              Learn More
            </a>
          </div>
          <div class="col col-12 sm-col-6 sm-pr1">
            <img class="svg-illustration" id="external-configuration" src="images/external-configuration.svg" alt="">
          </div>
        </section>
      </div>
    </div>
  </div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col col-12 sm-col-6">
          <h2 class="regular my0 steel-body muted">03</h2>
          <h1 class="mt0 mb1 steel-heading">Circuit Breaker</h1>
          <p class="mt0 steel-body">
            What do you do when a service you depend on stops responding? Circuit breakers enable you to bypass a failing service, allowing it time to recover, and preventing your users from seeing nasty error messages. Steeltoe includes a .NET implementation of Netflix Hystrix, a proven circuit breaker implementation with rich metrics and monitoring features.
          </p>
            <a href="/docs/steeltoe-circuitbreaker/" class="btn btn-cta center sm-left block sm-inline-block border-white bg-blue white sm-mr1 not-rounded regular">
              Learn More
            </a>
        </div>
        <div class="col col-12 sm-col-6 sm-pl4">
          <img class="svg-illustration" id="circuit-breaker" src="images/circuit-breaker.svg" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py2 sm-py4">
        <section class="clearfix py1 sm-py4">
          <div class="col col-12 sm-col-6 sm-col-right sm-pl2">
            <h2 class="regular my0 steel-body muted">04</h2>
            <h1 class="mt0 mb1 steel-heading">Cloud Connectors</h1>
            <p class="mt0 steel-body">
              One of the many advantages of running applications on the cloud is the easy availability of a variety of backing services. Steeltoe simplifies using those services by automatically configuring and wiring up connections to common Cloud Foundry  services like Redis, RabbitMQ, MySQL and Postgres.
            </p>
            <a href="/docs/steeltoe-connectors/" class="btn btn-cta center sm-left block sm-inline-block border-white bg-blue white sm-mr1 not-rounded regular">
              Learn More
            </a>
          </div>
          <div class="col col-12 sm-col-6 sm-pr1">
            <img class="svg-illustration" id="cloud-connector" src="images/cloud-connector.svg" alt="">
          </div>
        </section>
      </div>
    </div>
  </div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col col-12 sm-col-6">
          <h2 class="regular my0 steel-body muted">05</h2>
          <h1 class="mt0 mb1 steel-heading">Cloud Security Providers</h1>
          <p class="mt0 steel-body">
            Securing your applications and microservices using the security services provided by cloud platforms can seem like an impossible and complex development effort.  Steeltoe reduces that effort by including security providers which enable you to easily integrate ASP.NET Core authentication and authorization features with Cloud Foundry security services. 
          </p>
            <a href="/docs/steeltoe-security/" class="btn btn-cta center sm-left block sm-inline-block border-white bg-blue white sm-mr1 not-rounded regular">
              Learn More
            </a>
        </div>
        <div class="col col-12 sm-col-6 sm-pl4">
          <img class="svg-illustration" id="cloud-scurity" src="images/cloud-security.svg" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py2 sm-py4">
        <section class="py1 sm-py4 sm-mxn1">
          <h2 class="regular my0 steel-body muted">
            <i class="fa fa-quote-left"></i>
          </h2>
          <h1 class="mt0 mb3 steel-heading">What They&#39;re Saying</h1>
          <div class="clearfix">
            <div class="col col-12 sm-col-6 sm-px1">
              <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Words can&#39;t express how cool it is that <a href="https://twitter.com/springboot?ref_src=twsrc%5Etfw">@springboot</a> with eureka and zuul works so awesome with <a href="https://twitter.com/SteeltoeOSS?ref_src=twsrc%5Etfw">@SteeltoeOSS</a> enabling us to have dot net core services and spring boot services all managed through one gateway with security and circuit breaker.</p>&mdash; Jarett (@jarettlear) <a href="https://twitter.com/jarettlear/status/953651637251395584?ref_src=twsrc%5Etfw">January 17, 2018</a></blockquote>
            </div>
            <div class="col col-12 sm-col-6 sm-px1">
              <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Welcome <a href="https://twitter.com/SteeltoeOSS?ref_src=twsrc%5Etfw">@SteeltoeOSS</a> to the .NET Foundation! <a href="https://t.co/YQx0OhTO2T">https://t.co/YQx0OhTO2T</a></p>&mdash; .NET Foundation (@dotnetfdn) <a href="https://twitter.com/dotnetfdn/status/930880290309816320?ref_src=twsrc%5Etfw">November 15, 2017</a></blockquote>
            </div>
          </div>
          <div class="clearfix">
            <div class="col col-12 sm-col-6 sm-px1">
              <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">I have been excited about <a href="https://twitter.com/SteeltoeOSS?ref_src=twsrc%5Etfw">@SteeltoeOSS</a> for a while coz of my love for <a href="https://twitter.com/hashtag/springframework?src=hash&amp;ref_src=twsrc%5Etfw">#springframework</a>, dear <a href="https://twitter.com/hashtag/dotnetcore?src=hash&amp;ref_src=twsrc%5Etfw">#dotnetcore</a> devs give it a shot <a href="https://t.co/anI0X5JnRc">https://t.co/anI0X5JnRc</a> watch <a href="https://t.co/yGi2A9DQda">https://t.co/yGi2A9DQda</a></p>&mdash; Tomar (@chirdeeptomar) <a href="https://twitter.com/chirdeeptomar/status/946853599258259468?ref_src=twsrc%5Etfw">December 29, 2017</a></blockquote>
            </div>
            <div class="col col-12 sm-col-6 sm-px1">
              <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Like <a href="https://twitter.com/SteeltoeOSS?ref_src=twsrc%5Etfw">@SteeltoeOSS</a> ?</p>&mdash; Scott Hanselman (@shanselman) <a href="https://twitter.com/shanselman/status/920333895811219456?ref_src=twsrc%5Etfw">October 17, 2017</a></blockquote>
            </div>
          </div>
        </section>
      </div>
    </div>
  </div>

</main>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
